/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CredLinkContract,
  CredLinkContractInterface,
} from "../../../contracts/CredLink.sol/CredLinkContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "BorrowerApplySuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_approverAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_borrowerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "BorrowerApproveSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "LenderDepositSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timeOfRepay",
        type: "uint256",
      },
    ],
    name: "RepaySuccessful",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "applyForLoan",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasBorrow",
            type: "bool",
          },
        ],
        internalType: "struct CredLinkContract.borrowerDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_borrowerToApprove",
        type: "address",
      },
    ],
    name: "approveBorrower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLenderBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "lenderDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
    ],
    name: "repayLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewApproveBorrowers",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasBorrow",
            type: "bool",
          },
        ],
        internalType: "struct CredLinkContract.borrowerDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewAvailableLoans",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewInterestedBorrowers",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasBorrow",
            type: "bool",
          },
        ],
        internalType: "struct CredLinkContract.borrowerDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611fa1380380611fa18339818101604052810190610032919061011c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b611e49806101586000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806395f701fb1161006657806395f701fb1461011e5780639a4719201461013d5780639d76ea5814610159578063e1908f5514610177578063f8f8cac01461019557610093565b8063190ef1e6146100985780634efe2720146100b45780634ff70cce146100e45780637f59620814610100575b600080fd5b6100b260048036038101906100ad9190611518565b6101b3565b005b6100ce60048036038101906100c9919061157b565b61052d565b6040516100db919061163a565b60405180910390f35b6100fe60048036038101906100f99190611655565b6107ee565b005b610108610aaf565b6040516101159190611691565b60405180910390f35b610126610af6565b604051610134929190611819565b60405180910390f35b61015760048036038101906101529190611518565b610ca0565b005b610161611080565b60405161016e919061185f565b60405180910390f35b61017f6110a6565b60405161018c919061196b565b60405180910390f35b61019d61129c565b6040516101aa919061196b565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610222576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610219906119ea565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102c0919061185f565b602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190611a1f565b1015610342576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033990611a98565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3383600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518463ffffffff1660e01b815260040161043e93929190611ab8565b6020604051808303816000875af115801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190611b1b565b50600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101543373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa8e1d614f94aa2880b553d337241c77e62c0cf029977bbf6e9ef4ace0d01a4a8426040516105229190611691565b60405180910390a450565b610535611492565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90611bba565b60405180910390fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610647576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063e90611c26565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000604051806060016040528085815260200184815260200160001515815250905080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050823373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f0be6d67c4fa506aa39ce74225a5c517c8e21a6c9b487f33eaa707843473c8683876040516107de9190611691565b60405180910390a4509392505050565b60008111610831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082890611c92565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161088e919061185f565b602060405180830381865afa1580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf9190611a1f565b90508181101561090b576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161096a93929190611ab8565b6020604051808303816000875af1158015610989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ad9190611b1b565b5081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fd9190611ce1565b925050819055506005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550813373ffffffffffffffffffffffffffffffffffffffff167f0fd9fe15ac290a36d490401f9a262728d1d83a8eefd15b9d29afb7e5ec5217e460405160405180910390a35050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6060806000600580549050905060008167ffffffffffffffff811115610b1f57610b1e611d15565b5b604051908082528060200260200182016040528015610b4d5781602001602082028036833780820191505090505b50905060005b600580549050811015610c0a576002600060058381548110610b7857610b77611d44565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610bf157610bf0611d44565b5b6020026020010181815250508080600101915050610b53565b5060058181805480602002602001604051908101604052809291908181526020018280548015610c8f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c45575b505050505091509350935050509091565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d06906119ea565b60405180910390fd5b600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9690611dbf565b60405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106110215780600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e7b9190611ddf565b925050819055506001600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3084846040518463ffffffff1660e01b8152600401610fdc93929190611ab8565b6020604051808303816000875af1158015610ffb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101f9190611b1b565b505b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbf8271f8b8b3f268926413d59de46e2381450667289a8179a7222f93750777da60405160405180910390a45050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561116957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161111f575b505050505090506000815167ffffffffffffffff81111561118d5761118c611d15565b5b6040519080825280602002602001820160405280156111c657816020015b6111b3611492565b8152602001906001900390816111ab5790505b50905060005b825181101561129357600660008483815181106111ec576111eb611d44565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505082828151811061127b5761127a611d44565b5b602002602001018190525080806001019150506111cc565b50809250505090565b60606000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561135f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611315575b505050505090506000815167ffffffffffffffff81111561138357611382611d15565b5b6040519080825280602002602001820160405280156113bc57816020015b6113a9611492565b8152602001906001900390816113a15790505b50905060005b825181101561148957600660008483815181106113e2576113e1611d44565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505082828151811061147157611470611d44565b5b602002602001018190525080806001019150506113c2565b50809250505090565b604051806060016040528060008152602001600081526020016000151581525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114e5826114ba565b9050919050565b6114f5816114da565b811461150057600080fd5b50565b600081359050611512816114ec565b92915050565b60006020828403121561152e5761152d6114b5565b5b600061153c84828501611503565b91505092915050565b6000819050919050565b61155881611545565b811461156357600080fd5b50565b6000813590506115758161154f565b92915050565b600080600060608486031215611594576115936114b5565b5b60006115a286828701611503565b93505060206115b386828701611566565b92505060406115c486828701611566565b9150509250925092565b6115d781611545565b82525050565b60008115159050919050565b6115f2816115dd565b82525050565b60608201600082015161160e60008501826115ce565b50602082015161162160208501826115ce565b50604082015161163460408501826115e9565b50505050565b600060608201905061164f60008301846115f8565b92915050565b60006020828403121561166b5761166a6114b5565b5b600061167984828501611566565b91505092915050565b61168b81611545565b82525050565b60006020820190506116a66000830184611682565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116e1816114da565b82525050565b60006116f383836116d8565b60208301905092915050565b6000602082019050919050565b6000611717826116ac565b61172181856116b7565b935061172c836116c8565b8060005b8381101561175d57815161174488826116e7565b975061174f836116ff565b925050600181019050611730565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006117a283836115ce565b60208301905092915050565b6000602082019050919050565b60006117c68261176a565b6117d08185611775565b93506117db83611786565b8060005b8381101561180c5781516117f38882611796565b97506117fe836117ae565b9250506001810190506117df565b5085935050505092915050565b60006040820190508181036000830152611833818561170c565b9050818103602083015261184781846117bb565b90509392505050565b611859816114da565b82525050565b60006020820190506118746000830184611850565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6060820160008201516118bc60008501826115ce565b5060208201516118cf60208501826115ce565b5060408201516118e260408501826115e9565b50505050565b60006118f483836118a6565b60608301905092915050565b6000602082019050919050565b60006119188261187a565b6119228185611885565b935061192d83611896565b8060005b8381101561195e57815161194588826118e8565b975061195083611900565b925050600181019050611931565b5085935050505092915050565b60006020820190508181036000830152611985818461190d565b905092915050565b600082825260208201905092915050565b7f63616e6e6f742073656e6420746f2061646472657373207a65726f0000000000600082015250565b60006119d4601b8361198d565b91506119df8261199e565b602082019050919050565b60006020820190508181036000830152611a03816119c7565b9050919050565b600081519050611a198161154f565b92915050565b600060208284031215611a3557611a346114b5565b5b6000611a4384828501611a0a565b91505092915050565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000611a8260148361198d565b9150611a8d82611a4c565b602082019050919050565b60006020820190508181036000830152611ab181611a75565b9050919050565b6000606082019050611acd6000830186611850565b611ada6020830185611850565b611ae76040830184611682565b949350505050565b611af8816115dd565b8114611b0357600080fd5b50565b600081519050611b1581611aef565b92915050565b600060208284031215611b3157611b306114b5565b5b6000611b3f84828501611b06565b91505092915050565b7f7265706179206c6f616e20746f20626520656c696769626c6520666f7220626f60008201527f72726f77696e6700000000000000000000000000000000000000000000000000602082015250565b6000611ba460278361198d565b9150611baf82611b48565b604082019050919050565b60006020820190508181036000830152611bd381611b97565b9050919050565b7f4e6f7420417661696c61626c6500000000000000000000000000000000000000600082015250565b6000611c10600d8361198d565b9150611c1b82611bda565b602082019050919050565b60006020820190508181036000830152611c3f81611c03565b9050919050565b7f63616e6e6f742073656e64207a65726f20746f6b656e00000000000000000000600082015250565b6000611c7c60168361198d565b9150611c8782611c46565b602082019050919050565b60006020820190508181036000830152611cab81611c6f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cec82611545565b9150611cf783611545565b9250828201905080821115611d0f57611d0e611cb2565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f63616e6e6f7420626f72726f77206d756c7469706c652074696d657300000000600082015250565b6000611da9601c8361198d565b9150611db482611d73565b602082019050919050565b60006020820190508181036000830152611dd881611d9c565b9050919050565b6000611dea82611545565b9150611df583611545565b9250828203905081811115611e0d57611e0c611cb2565b5b9291505056fea26469706673582212203d20dbb9ccf57f2212fa232e2e4d140ed5f1f7d1fc0fcbc68e3251f0fbb70c9c64736f6c634300081b0033";

type CredLinkContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CredLinkContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CredLinkContract__factory extends ContractFactory {
  constructor(...args: CredLinkContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  override deploy(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenAddress, overrides || {}) as Promise<
      CredLinkContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CredLinkContract__factory {
    return super.connect(runner) as CredLinkContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CredLinkContractInterface {
    return new Interface(_abi) as CredLinkContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CredLinkContract {
    return new Contract(address, _abi, runner) as unknown as CredLinkContract;
  }
}
