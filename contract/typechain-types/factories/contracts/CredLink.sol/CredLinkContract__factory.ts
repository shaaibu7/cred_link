/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CredLinkContract,
  CredLinkContractInterface,
} from "../../../contracts/CredLink.sol/CredLinkContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "BorrowerApplySuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_approverAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_borrowerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "BorrowerApproveSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "LenderDepositSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timeOfRepay",
        type: "uint256",
      },
    ],
    name: "RepaySuccessful",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "applyForLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_borrowerToApprove",
        type: "address",
      },
    ],
    name: "approveBorrower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLenderBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "lenderDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
    ],
    name: "repayLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewApproveBorrowers",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasBorrow",
            type: "bool",
          },
        ],
        internalType: "struct CredLinkContract.borrowerDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewAvailableLoans",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewInterestedBorrowers",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasBorrow",
            type: "bool",
          },
        ],
        internalType: "struct CredLinkContract.borrowerDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611fa5380380611fa58339818101604052810190610032919061011c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b611e4d806101586000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806395f701fb1161006657806395f701fb1461010a5780639a471920146101295780639d76ea5814610145578063e1908f5514610163578063f8f8cac01461018157610093565b8063190ef1e6146100985780634efe2720146100b45780634ff70cce146100d05780637f596208146100ec575b600080fd5b6100b260048036038101906100ad91906114e7565b61019f565b005b6100ce60048036038101906100c9919061154a565b610519565b005b6100ea60048036038101906100e5919061159d565b6107b7565b005b6100f4610a78565b60405161010191906115d9565b60405180910390f35b610112610abf565b604051610120929190611770565b60405180910390f35b610143600480360381019061013e91906114e7565b610c69565b005b61014d61104f565b60405161015a91906117b6565b60405180910390f35b61016b611075565b60405161017891906118dd565b60405180910390f35b61018961126b565b60405161019691906118dd565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361020e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102059061195c565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102ac91906117b6565b602060405180830381865afa1580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190611991565b101561032e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611a0a565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3383600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518463ffffffff1660e01b815260040161042a93929190611a2a565b6020604051808303816000875af1158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d9190611a8d565b50600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101543373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa8e1d614f94aa2880b553d337241c77e62c0cf029977bbf6e9ef4ace0d01a4a84260405161050e91906115d9565b60405180910390a450565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190611b2c565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161561062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190611bbe565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a390611c2a565b60405180910390fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550803373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0be6d67c4fa506aa39ce74225a5c517c8e21a6c9b487f33eaa707843473c8683856040516107aa91906115d9565b60405180910390a4505050565b600081116107fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f190611c96565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161085791906117b6565b602060405180830381865afa158015610874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108989190611991565b9050808211156108d4576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161093393929190611a2a565b6020604051808303816000875af1158015610952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109769190611a8d565b5081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109c69190611ce5565b925050819055506005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550813373ffffffffffffffffffffffffffffffffffffffff167f0fd9fe15ac290a36d490401f9a262728d1d83a8eefd15b9d29afb7e5ec5217e460405160405180910390a35050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6060806000600580549050905060008167ffffffffffffffff811115610ae857610ae7611d19565b5b604051908082528060200260200182016040528015610b165781602001602082028036833780820191505090505b50905060005b600580549050811015610bd3576002600060058381548110610b4157610b40611d48565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610bba57610bb9611d48565b5b6020026020010181815250508080600101915050610b1c565b5060058181805480602002602001604051908101604052809291908181526020018280548015610c5857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c0e575b505050505091509350935050509091565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccf9061195c565b60405180910390fd5b60011515600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151503610d6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6590611dc3565b60405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410610ff05780600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e4a9190611de3565b925050819055506001600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3084846040518463ffffffff1660e01b8152600401610fab93929190611a2a565b6020604051808303816000875af1158015610fca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fee9190611a8d565b505b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbf8271f8b8b3f268926413d59de46e2381450667289a8179a7222f93750777da60405160405180910390a45050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561113857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110ee575b505050505090506000815167ffffffffffffffff81111561115c5761115b611d19565b5b60405190808252806020026020018201604052801561119557816020015b611182611461565b81526020019060019003908161117a5790505b50905060005b825181101561126257600660008483815181106111bb576111ba611d48565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505082828151811061124a57611249611d48565b5b6020026020010181905250808060010191505061119b565b50809250505090565b60606000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561132e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112e4575b505050505090506000815167ffffffffffffffff81111561135257611351611d19565b5b60405190808252806020026020018201604052801561138b57816020015b611378611461565b8152602001906001900390816113705790505b50905060005b825181101561145857600660008483815181106113b1576113b0611d48565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508282815181106114405761143f611d48565b5b60200260200101819052508080600101915050611391565b50809250505090565b604051806060016040528060008152602001600081526020016000151581525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114b482611489565b9050919050565b6114c4816114a9565b81146114cf57600080fd5b50565b6000813590506114e1816114bb565b92915050565b6000602082840312156114fd576114fc611484565b5b600061150b848285016114d2565b91505092915050565b6000819050919050565b61152781611514565b811461153257600080fd5b50565b6000813590506115448161151e565b92915050565b60008060006060848603121561156357611562611484565b5b6000611571868287016114d2565b935050602061158286828701611535565b925050604061159386828701611535565b9150509250925092565b6000602082840312156115b3576115b2611484565b5b60006115c184828501611535565b91505092915050565b6115d381611514565b82525050565b60006020820190506115ee60008301846115ca565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611629816114a9565b82525050565b600061163b8383611620565b60208301905092915050565b6000602082019050919050565b600061165f826115f4565b61166981856115ff565b935061167483611610565b8060005b838110156116a557815161168c888261162f565b975061169783611647565b925050600181019050611678565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116e781611514565b82525050565b60006116f983836116de565b60208301905092915050565b6000602082019050919050565b600061171d826116b2565b61172781856116bd565b9350611732836116ce565b8060005b8381101561176357815161174a88826116ed565b975061175583611705565b925050600181019050611736565b5085935050505092915050565b6000604082019050818103600083015261178a8185611654565b9050818103602083015261179e8184611712565b90509392505050565b6117b0816114a9565b82525050565b60006020820190506117cb60008301846117a7565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b611812816117fd565b82525050565b60608201600082015161182e60008501826116de565b50602082015161184160208501826116de565b5060408201516118546040850182611809565b50505050565b60006118668383611818565b60608301905092915050565b6000602082019050919050565b600061188a826117d1565b61189481856117dc565b935061189f836117ed565b8060005b838110156118d05781516118b7888261185a565b97506118c283611872565b9250506001810190506118a3565b5085935050505092915050565b600060208201905081810360008301526118f7818461187f565b905092915050565b600082825260208201905092915050565b7f63616e6e6f742073656e6420746f2061646472657373207a65726f0000000000600082015250565b6000611946601b836118ff565b915061195182611910565b602082019050919050565b6000602082019050818103600083015261197581611939565b9050919050565b60008151905061198b8161151e565b92915050565b6000602082840312156119a7576119a6611484565b5b60006119b58482850161197c565b91505092915050565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006119f46014836118ff565b91506119ff826119be565b602082019050919050565b60006020820190508181036000830152611a23816119e7565b9050919050565b6000606082019050611a3f60008301866117a7565b611a4c60208301856117a7565b611a5960408301846115ca565b949350505050565b611a6a816117fd565b8114611a7557600080fd5b50565b600081519050611a8781611a61565b92915050565b600060208284031215611aa357611aa2611484565b5b6000611ab184828501611a78565b91505092915050565b7f6c656e64657220646f6573206e6f7420686176652073756666696369656e742060008201527f66756e6473000000000000000000000000000000000000000000000000000000602082015250565b6000611b166025836118ff565b9150611b2182611aba565b604082019050919050565b60006020820190508181036000830152611b4581611b09565b9050919050565b7f7265706179206c6f616e20746f20626520656c696769626c6520666f7220626f60008201527f72726f77696e6700000000000000000000000000000000000000000000000000602082015250565b6000611ba86027836118ff565b9150611bb382611b4c565b604082019050919050565b60006020820190508181036000830152611bd781611b9b565b9050919050565b7f4e6f7420417661696c61626c6500000000000000000000000000000000000000600082015250565b6000611c14600d836118ff565b9150611c1f82611bde565b602082019050919050565b60006020820190508181036000830152611c4381611c07565b9050919050565b7f63616e6e6f742073656e64207a65726f20746f6b656e00000000000000000000600082015250565b6000611c806016836118ff565b9150611c8b82611c4a565b602082019050919050565b60006020820190508181036000830152611caf81611c73565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cf082611514565b9150611cfb83611514565b9250828201905080821115611d1357611d12611cb6565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f63616e6e6f7420626f72726f77206d756c7469706c652074696d657300000000600082015250565b6000611dad601c836118ff565b9150611db882611d77565b602082019050919050565b60006020820190508181036000830152611ddc81611da0565b9050919050565b6000611dee82611514565b9150611df983611514565b9250828203905081811115611e1157611e10611cb6565b5b9291505056fea2646970667358221220ff454cc7b782661a91d667b0b816dbe1de9d8275a2d62b3d621cf477b10d5f4d64736f6c634300081b0033";

type CredLinkContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CredLinkContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CredLinkContract__factory extends ContractFactory {
  constructor(...args: CredLinkContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  override deploy(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenAddress, overrides || {}) as Promise<
      CredLinkContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CredLinkContract__factory {
    return super.connect(runner) as CredLinkContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CredLinkContractInterface {
    return new Interface(_abi) as CredLinkContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CredLinkContract {
    return new Contract(address, _abi, runner) as unknown as CredLinkContract;
  }
}
