/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICredLink,
  ICredLinkInterface,
} from "../../../contracts/interfaces/ICredLink";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_loanId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "applyForLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_borrowerToApprove",
        type: "address",
      },
    ],
    name: "approveBorrower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "lenderDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "openDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "repayLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewApproveBorrowers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewAvailableLoans",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewInterestedBorrowers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICredLink__factory {
  static readonly abi = _abi;
  static createInterface(): ICredLinkInterface {
    return new Interface(_abi) as ICredLinkInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ICredLink {
    return new Contract(address, _abi, runner) as unknown as ICredLink;
  }
}
